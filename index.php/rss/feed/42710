<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>eZ Projects / ezblueprints / Forum / General</title>
    <link>http://projects.ez.no/</link>
    <description></description>
    <language>en-GB</language>
    <managingEditor>community@ez.no (Administrator User)</managingEditor>
    <pubDate>Wed, 08 Feb 2017 03:52:21 +0000</pubDate>
    <lastBuildDate>Wed, 08 Feb 2017 03:52:21 +0000</lastBuildDate>
    <generator>eZ Components Feed dev (http://ezcomponents.org/docs/tutorials/Feed)</generator>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <atom:link href="http://projects.ez.no/rss/feed/42710" rel="self" type="application/rss+xml"/>
    <item>
      <title>Re: Stub-approach or basic functionality to ill...</title>
      <link>http://projects.ez.no/ezblueprints/forum/general/stub_approach_or_basic_functionality_to_illustrate/re_stub_approach_or_basic_functionality_to_ill2</link>
      <description>I also lean towards having a basic functionality to illustrate the type of extension. It is key to usefulness. &#13;
&#13;
The name of the extension will be, for a template operator : &#13;
&lt;code&gt;ezblueprintstemplateoperator&lt;/code&gt;&#13;
&#13;
correct ?&#13;
&#13;
Could that not be simplified down to templateoperator ?&#13;
&#13;
Cheers,</description>
      <author>community@ez.no (Nicolas Pastorino)</author>
      <guid>http://projects.ez.no/ezblueprints/forum/general/stub_approach_or_basic_functionality_to_illustrate/re_stub_approach_or_basic_functionality_to_ill2</guid>
      <pubDate>Tue, 20 Sep 2011 06:30:48 +0000</pubDate>
    </item>
    <item>
      <title>Re: Stub-approach or basic functionality to ill...</title>
      <link>http://projects.ez.no/ezblueprints/forum/general/stub_approach_or_basic_functionality_to_illustrate/re_stub_approach_or_basic_functionality_to_ill</link>
      <description>My take:&#13;
&#13;
- naming of extensions: ezblueprintsxxx&#13;
- in every extension: extension.xml file, readme file with step by step instructions on creating the different files needed&#13;
- name different things different, eg. a view and its associated access function&#13;
- use or at least document using code comments every possible feature (eg. access functions with limitations, all params in module.php, etc...)&#13;
- not a lot of business logic in each extension, to keep user focused, but still a little bit, or extensions will make no sense&#13;
- I propose to use as common case for template operators and views some functionality related to filesystem manipulation:&#13;
  . fetch function to get list of files in a directory (params, limit, offset, sort_by)&#13;
  . tpl operators to get filemtime given filename (no params), filesize given filename (one param: output format)&#13;
  . views that list all files in a given dir (without using fetch function)</description>
      <author>community@ez.no (Gaetano Giunta)</author>
      <guid>http://projects.ez.no/ezblueprints/forum/general/stub_approach_or_basic_functionality_to_illustrate/re_stub_approach_or_basic_functionality_to_ill</guid>
      <pubDate>Fri, 16 Sep 2011 11:35:23 +0000</pubDate>
    </item>
    <item>
      <title>Stub-approach or basic functionality to illustrate ?</title>
      <link>http://projects.ez.no/ezblueprints/forum/general/stub_approach_or_basic_functionality_to_illustrate</link>
      <description>Excellent initiative Gaetano, much useful to beginners (and ex-beginners too, given the diversity of extension points on eZ Publish !). &#13;
&#13;
Question : &#13;
is the intent to write stubs only, with no business logic inside it, or to add a basic, illustrating functionality within the stub ?&#13;
&#13;
Cheers,</description>
      <author>community@ez.no (Nicolas Pastorino)</author>
      <guid>http://projects.ez.no/ezblueprints/forum/general/stub_approach_or_basic_functionality_to_illustrate</guid>
      <pubDate>Fri, 16 Sep 2011 09:17:30 +0000</pubDate>
    </item>
  </channel>
</rss>