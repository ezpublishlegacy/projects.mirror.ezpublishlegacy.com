Index: shop/basket.php
===================================================================
--- shop/basket.php	(revision 7245)
+++ shop/basket.php	(working copy)
@@ -52,74 +52,83 @@
 $basket =& eZBasket::currentBasket();
 $basket->updatePrices();
 
-if ( $http->hasPostVariable( "ActionAddToBasket" ) )
+if ( $http->hasPostVariable( "ActionAddToBasket" ) and $http->hasPostVariable( "ContentObjectID" ) )
 {
-    $objectID = $http->postVariable( "ContentObjectID" );
-    $optionList =& $http->postVariable( "eZOption" );
-    $object = eZContentObject::fetch( $objectID );
-    $nodeID = $object->attribute( 'main_node_id' );
-    $http->setSessionVariable( "FromPage", "/content/view/full/" . $nodeID . "/" );
-    $price = 0.0;
-    $isVATIncluded = true;
-    $attributes = $object->contentObjectAttributes();
-    foreach ( $attributes as $attribute )
-    {
-        $dataType =& $attribute->dataType();
+    if ( !is_array( $http->postVariable( "ContentObjectID" ) ) )
+        $orderItems = array( $http->postVariable( "ContentObjectID" ) );
+    else
+        $orderItems = $http->postVariable( "ContentObjectID" );
 
-        if ( $dataType->isA() == "ezprice" )
-        {
-            $priceObj =& $attribute->content();
-            $price += $priceObj->attribute( 'price' );
-        }
-    }
+    if ( $http->hasPostVariable( "ContentNodeID" ) )
+        $http->setSessionVariable( "FromPage", "/content/view/full/" . $http->postVariable( "ContentNodeID" ) . "/" );
 
-    $basket =& eZBasket::currentBasket();
-    $sessionID = $http->sessionID();
-
-    $item =& eZProductCollectionItem::create( $basket->attribute( "productcollection_id" ) );
-
-    $item->setAttribute( "contentobject_id", $objectID );
-    $item->setAttribute( "item_count", 1 );
-    $item->setAttribute( "price", $price );
-    if ( $priceObj->attribute( 'is_vat_included' ) )
+    foreach ( $orderItems as $objectID )
     {
-        $item->setAttribute( "is_vat_inc", '1' );
-    }
-    else
-    {
-        $item->setAttribute( "is_vat_inc", '0' );
-    }
-    $item->setAttribute( "vat_value", $priceObj->attribute( 'vat_percent' ) );
-    $item->setAttribute( "discount", $priceObj->attribute( 'discount_percent' ) );
-    $item->store();
-    $priceWithoutOptions = $price;
-    eZDebug::writeDebug( $optionList, 'optionlist' );
-    foreach ( array_keys( $optionList ) as $key )
-    {
-        $attributeID = $key;
-        $optionSelected = $optionList[$key];
-        $attribute =& eZContentObjectAttribute::fetch( $attributeID, $object->attribute( 'current_version' ) );
-        $option =& $attribute->attribute( 'content' );
-        eZDebug::writeDebug( $option->attribute( 'option_list' ), "optionitems" );
-        foreach( $option->attribute( 'option_list' ) as $optionArray )
+        $optionList =& $http->postVariable( "eZOption" );
+        $object = eZContentObject::fetch( $objectID );
+        $nodeID = $object->attribute( 'main_node_id' );
+        $http->setSessionVariable( "FromPage", "/content/view/full/" . $nodeID . "/" );
+        $price = 0.0;
+        $isVATIncluded = true;
+        $attributes = $object->contentObjectAttributes();
+        foreach ( $attributes as $attribute )
         {
-            if( $optionArray['id'] == $optionSelected )
+            $dataType =& $attribute->dataType();
+        
+            if ( $dataType->isA() == "ezprice" )
             {
-                $optionItem =& eZProductCollectionItemOption::create( $item->attribute( 'id' ), $optionArray['id'], $option->attribute( 'name' ),
-                                                                      $optionArray['value'], $optionArray['additional_price'], $attributeID );
-                $optionItem->store();
-                $price += $optionArray['additional_price'];
-                break;
+                $priceObj =& $attribute->content();
+                $price += $priceObj->attribute( 'price' );
             }
         }
-
-    }
-    if ( $price != $priceWithoutOptions )
-    {
+        
+        $basket =& eZBasket::currentBasket();
+        $sessionID = $http->sessionID();
+        
+        $item =& eZProductCollectionItem::create( $basket->attribute( "productcollection_id" ) );
+        
+        $item->setAttribute( "contentobject_id", $objectID );
+        $item->setAttribute( "item_count", 1 );
         $item->setAttribute( "price", $price );
+        if ( $priceObj->attribute( 'is_vat_included' ) )
+        {
+            $item->setAttribute( "is_vat_inc", '1' );
+        }
+        else
+        {
+            $item->setAttribute( "is_vat_inc", '0' );
+        }
+        $item->setAttribute( "vat_value", $priceObj->attribute( 'vat_percent' ) );
+        $item->setAttribute( "discount", $priceObj->attribute( 'discount_percent' ) );
         $item->store();
+        $priceWithoutOptions = $price;
+        eZDebug::writeDebug( $optionList, 'optionlist' );
+        foreach ( array_keys( $optionList ) as $key )
+        {
+            $attributeID = $key;
+            $optionSelected = $optionList[$key];
+            $attribute =& eZContentObjectAttribute::fetch( $attributeID, $object->attribute( 'current_version' ) );
+            $option =& $attribute->attribute( 'content' );
+            eZDebug::writeDebug( $option->attribute( 'option_list' ), "optionitems" );
+            foreach( $option->attribute( 'option_list' ) as $optionArray )
+            {
+                if( $optionArray['id'] == $optionSelected )
+                {
+                    $optionItem =& eZProductCollectionItemOption::create( $item->attribute( 'id' ), $optionArray['id'], $option->attribute( 'name' ),
+                                                                          $optionArray['value'], $optionArray['additional_price'], $attributeID );
+                    $optionItem->store();
+                    $price += $optionArray['additional_price'];
+                    break;
+                }
+            }
+        
+        }
+        if ( $price != $priceWithoutOptions )
+        {
+            $item->setAttribute( "price", $price );
+            $item->store();
+        }
     }
-
     $module->redirectTo( "/shop/basket/" );
     return;
 }
